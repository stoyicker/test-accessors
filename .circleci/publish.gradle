// This file requires the maven-publish, java-library and signing plugins

project.version = {
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'describe', '--abbrev=0'
    standardOutput = stdout
  }
  return stdout.toString().replaceAll("[^\\d|.]", "")
}()

jar {
  archiveFileName = "${project.name}.jar"
}

task sourcesJar(type: Jar) {
  group = JavaBasePlugin.DOCUMENTATION_GROUP
  description = 'Assembles a sources JAR'
  archiveClassifier.set('sources')
  archiveFileName = "${project.name}-sources.jar"
  from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
  group = JavaBasePlugin.DOCUMENTATION_GROUP
  description = 'Assembles a javadoc JAR'
  archiveClassifier.set('javadoc')
  archiveFileName = "${project.name}-javadoc.jar"
  from dokkaJavadoc
}

publishing {
  publications {
    release(MavenPublication) {
      artifactId project.name
      version project.version
      artifact sourcesJar
      artifact javadocJar
      groupId 'com.github.stoyicker.test-accessors'
      pom {
        name = project.name
        description = project.name
        url = 'https://github.com/stoyicker/test-accessors'
        licenses {
          license {
            name = 'Apache-2.0'
            url = 'https://www.apache.org/licenses/LICENSE-2.0'
          }
        }
        developers {
          developer {
            id = 'stoyicker'
            name = 'Jorge Antonio Diaz-Benito Soriano'
            email = 'jorge.diazbenitosoriano@gmail.com'
          }
        }
        scm {
          connection = 'scm:git:https://github.com:stoyicker/test-accessors.git'
          developerConnection = 'scm:git:ssh:git@github.com:stoyicker/test-accessors.git'
          url = 'https://github.com/stoyicker/test-accessors'
        }
      }
      from components.java
    }
  }
  repositories {
    maven {
      name "sonatype"
      url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
      credentials {
        username = "$System.env.OSS_USER"
        password = "$System.env.OSS_PASSWORD"
      }
    }
  }
}

signing {
  sign publishing.publications
}

ext["signing.keyId"] = "$System.env.GPG_KEYID"
ext["signing.password"] = "$System.env.GPG_PASSWORD"
ext["signing.secretKeyRingFile"] = "$rootProject.rootDir/secring.gpg"
